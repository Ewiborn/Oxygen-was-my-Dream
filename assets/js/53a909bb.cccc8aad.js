"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[180],{6419:e=>{e.exports=JSON.parse('{"functions":[{"name":"init","desc":"Initializes the CameraController by setting up the current camera and loading effects.","params":[],"returns":[{"desc":"Indicates if initialization was successful.","lua_type":"success"},{"desc":"Error message if initialization fails.","lua_type":"message"}],"function_type":"method","tags":["Setup"],"source":{"line":24,"path":"src/shared/components/camera/cameraController.lua"}},{"name":"setAttribute","desc":"Sets attributes for a specified effect. Accepts either a key-value pair or a table of key-value pairs.","params":[{"name":"effectName","desc":"The name of the effect to modify.","lua_type":"string"},{"name":"keyOrTable","desc":"The attribute key or a table of key-value pairs.","lua_type":"string|table"},{"name":"value","desc":"The value to set for the specified key (ignored if keyOrTable is a table).","lua_type":"any"}],"returns":[],"function_type":"method","tags":["Attribute"],"source":{"line":44,"path":"src/shared/components/camera/cameraController.lua"}},{"name":"getAttribute","desc":"Retrieves the value of a specified attribute for a given effect. If no key is provided, returns all attributes.","params":[{"name":"effectName","desc":"The name of the effect to query.","lua_type":"string"},{"name":"key","desc":"The specific attribute key to retrieve (optional).","lua_type":"string? key"}],"returns":[{"desc":"The value of the specified attribute, or a table of all attributes if no key is provided.","lua_type":"any"}],"function_type":"method","tags":["Attribute"],"source":{"line":68,"path":"src/shared/components/camera/cameraController.lua"}}],"properties":[],"types":[],"name":"CameraController","desc":"Provides an API to control camera effects.","realm":["Client"],"unreleased":true,"source":{"line":10,"path":"src/shared/components/camera/cameraController.lua"}}')}}]);